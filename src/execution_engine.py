import io
import sys
import contextlib


# Function to execute Python code in a safe environment
def execute_code(code):
    """
    Execute Python code in a safe environment.

    Args:
        code (str): The Python code to execute.

    Returns:
        str: The output generated by executing the code.
    """
    # Capture standard output and error streams
    stdout, stderr = sys.stdout, sys.stderr
    sys.stdout, sys.stderr = io.StringIO(), io.StringIO()

    try:
        # Execute the code in a safe environment
        with contextlib.redirect_stdout(sys.stdout), contextlib.redirect_stderr(sys.stderr):
            exec(code, {})
        output = sys.stdout.getvalue()
        error = sys.stderr.getvalue()
    except Exception as e:
        # If an exception occurs, capture the error message
        output = ""
        error = str(e)

    # Restore standard output and error streams
    sys.stdout, sys.stderr = stdout, stderr

    # Return the output and any error message
    return output if output else error


# Example usage
if __name__ == "__main__":
    code = """
    # Example Python code
    print("Hello, world!")
    """
    result = execute_code(code)
    print("Output:")
    print(result)
